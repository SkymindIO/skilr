% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/models.R
\name{Transform}
\alias{Transform}
\title{SKIL Transform
Wrapper for for preprocessing (transform) steps. Currently only
supports `TransformProcess` instances from pydatavec or their serialized
versions (JSON format).}
\usage{
Transform(transform = NULL, transform_id = NULL,
  transform_type = "CSV", name = NULL, version = NULL,
  experiment = NULL, labels = "", verbose = FALSE, create = TRUE)
}
\arguments{
\item{transform:}{pydatavec.TransformProcess or TransformProcess JSON}

\item{transform_id:}{integer. Unique id for the transform. If `None`, a unique id will be generated.}

\item{transform_type:}{Type of the SKIL transform. Choose from "CSV", "image" or "array"}

\item{name:}{string. Name for the transform.}

\item{version:}{integer. Version of the transform. Defaults to 1.}

\item{experiment:}{`Experiment` instance. If `None`, an `Experiment` object will be created internally.}

\item{labels:}{string. Labels associated with the workspace, useful for searching (comma separated).}

\item{verbose:}{boolean. If `True`, prints api response.}

\item{create:}{boolean. Internal. Do not use.}
}
\description{
SKIL Transform
Wrapper for for preprocessing (transform) steps. Currently only
supports `TransformProcess` instances from pydatavec or their serialized
versions (JSON format).
}
\examples{
\dontrun{
library(skilr)

# Creating a SKIL experiment
skil  <- Skil(host='localhost', port=9008, user_id='admin', password='admin')
ws    <- Workspace(skil, name='test_workspace')
exp   <- Experiment(ws, name='test_experiment')
trans <- Transform(transform="iris.json", name="my_pydatavec_transform", experiment=exp)

}
}
